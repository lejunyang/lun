@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

@include b(range) {
  display: flex;
  flex: 1;
  @include m(horizontal) {
    @include e(rail) {
      @include declareVars(
        (
          height: size,
        )
      );
      @include declareVarValues(
        (
          margin-block: calc(var(--factor) * var(--thumb-size)),
        )
      );
    }
    @include e(track) {
      height: 100%;
      inset-inline-start: calc(getVarValue((range, min)) * 100%);
      inset-inline-end: calc((1 - getVarValue((range, max))) * 100%);
    }
    @include e(thumb) {
      transform: translateX(-50%);
      inset-inline-start: calc(getVarValue((range, percent)) * 100%);
    }
  }
  @include m(vertical) {
    @include e(rail) {
      flex-direction: column;
      @include declareVars(
        (
          width: size,
        )
      );
      @include declareVarValues(
        (
          margin-inline: calc(var(--factor) * var(--thumb-size)),
        )
      );
    }
    @include e(track) {
      width: 100%;
      inset-block-start: calc(getVarValue((range, min)) * 100%);
      inset-block-end: calc((1 - getVarValue((range, max))) * 100%);
    }
    @include e(thumb) {
      transform: translateY(-50%);
      inset-block-start: calc(getVarValue((range, percent)) * 100%);
    }
  }

  @at-root {
    :host(:not([type='vertical'])) {
      display: block;
      width: 100%;
    }

    :host([type='vertical']) {
      display: inline-flex;
      @include declareVarValues(
        (
          height: 100px,
        )
      );
    }
  }

  --factor: #{getVarValue((range, thumb, factor), 0.25)};
  @include e(rail) {
    display: flex;
    flex: 1;
    align-items: center;
    position: relative;
    user-select: none;
    touch-action: none;
    @include declareVarValues(
      (
        background-color: getGrayColor(a3),
        border-radius: Max(getRadiusFactor() * getRadiusThumb(), getRadiusFactor() * getDeclaredVar(size) / 3),
      )
    );
  }

  @include e(track) {
    position: absolute;
    border-radius: inherit;
    background-color: getAccentColor(a9); // TODO radix-theme uses accent-track...
  }

  --thumb-size: calc(#{getDeclaredVar(size)} + #{getSpaceValue(1)});
  @include e(thumb) {
    position: absolute;
    outline: none;
    width: var(--thumb-size);
    height: var(--thumb-size);

    $thumb-shadow: 0 0 0 1px getColor('black', a4);
    &::after {
      content: '';
      position: absolute;
      background: white;
      border-radius: getRadiusValue(1, 'thumb');
      box-shadow: $thumb-shadow;
      inset: calc(-1 * var(--factor) * getDeclaredVar(size));
      cursor: pointer;
    }
    &:focus-visible::after {
      box-shadow: $thumb-shadow, 0 0 0 3px getAccentColor(3), 0 0 0 5px getFocusColor();
    }
  }

  @include is(disabled) {
    @include e(thumb) {
      &::after {
        cursor: getDisabledCursor();
      }
    }
  }

  @include size(1) {
    @include setVars(
      (
        size: calc(#{getSpaceValue(2)} * 0.75),
      )
    );
  }
  @include size(2) {
    @include setVars(
      (
        size: getSpaceValue(2),
      )
    );
  }
  @include size(3) {
    @include setVars(
      (
        size: calc(#{getSpaceValue(2)} * 1.25),
      )
    );
  }
}
