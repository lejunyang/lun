@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

:host {
  display: inline-flex;
  vertical-align: text-bottom;
}

.children-enter-active {
  transition: opacity 0.15s 0.1s ease-in;
}

.children-enter-from {
  opacity: 0;
}

.children-enter-to {
  opacity: 1;
}

.children-leave-active {
  display: none; // prevent two children from being displayed at the same time
}

@include b(switch) {
  display: inline-flex;
  align-items: center;
  overflow: hidden;
  cursor: pointer;
  @include declareVars((height, border-radius, background-color, box-shadow, padding));
  @include declareVarValues(
    (
      min-inline-size: calc(var(--height) * 1.75),
      transition: 'background-color 0.3s',
    )
  );
  @include setVars(
    (
      padding: 1px,
      thumb-size: calc(var(--height) - var(--padding) * 2),
    )
  );

  @include e(thumb) {
    align-items: center;
    display: inline-flex;
    justify-content: center;
    inline-size: var(--thumb-size);
    block-size: var(--thumb-size);
    background-color: white;
    border-radius: calc(var(--border-radius) - var(--padding));
    position: relative;
    inset-inline-start: var(--padding);
    transition: all 0.3s;
  }

  @include e(children) {
    @include declareVars(
      (
        font-size: children-font-size,
      )
    );
  }

  @include e(checked) {
    position: relative;
    inset-inline-start: calc(0px - var(--thumb-size));
    color: getAccentColor(contrast);
    @include declareVars(
      (
        padding: children-padding,
      )
    );
  }
  @include e(unchecked) {
    position: relative;
    inset-inline-start: var(--padding);
    @include declareVars(
      (
        padding: children-padding,
      )
    );
  }

  @include is(checked) {
    @include e(thumb) {
      inset-inline-start: calc(100% - var(--thumb-size) - var(--padding));
    }
  }

  @include is(disabled) {
    cursor: getDisabledCursor();
  }

  @include size(1) {
    @include setVars(
      (
        children-padding: 0 calc(#{getSpaceValue(1)} / 2),
        border-radius: getRadiusValue(1, false),
        height: getSpaceValue(4),
        children-font-size: getFontSizeValue(1),
      )
    );
  }
  @include size(2) {
    @include setVars(
      (
        children-padding: 0 #{getSpaceValue(1)},
        border-radius: getRadiusValue(2, false),
        height: calc(#{getSpaceValue(5)} * 5 / 6),
        children-font-size: getFontSizeValue(2),
      )
    );
  }
  @include size(3) {
    @include setVars(
      (
        children-padding: 0 #{getSpaceValue(2)},
        border-radius: getRadiusValue(2, false),
        height: getSpaceValue(5),
        children-font-size: getFontSizeValue(3),
      )
    );
  }
}
