@use '../../mixins' as *;

@include b(color-picker) {
  #{getVarName((range, thumb, factor))}: 0.25;
  --mask: conic-gradient(#{getGrayColor(a2)} 0 25%, transparent 0 50%, #{getGrayColor(a2)} 0 75%, transparent 0);

  @include e(panel) {
    display: flex;
    flex-direction: column;
    @include declareVars(
      (
        width: panel-width,
        gap: panel-gap,
      )
    );
  }
  @include e(palette) {
    position: relative;
    overflow: hidden;
    @include declareVars(
      (
        height: palette-height,
        border-radius: palette-border-radius,
      )
    );
  }
  @include e(saturation) {
    height: 100%;
  }

  @include e(thumb) {
    cursor: move;
    border-radius: getRadiusValue(1, 'thumb');
    box-shadow: 0 0 0 2px white;
    @include declareVars(
      (
        width: thumb-size,
        height: thumb-size,
      )
    );
  }

  @include e(wrapper) {
    display: flex;
    align-items: center;
    @include declareVars(
      (
        gap: wrapper-gap,
      )
    );
  }
  @include e(ranges) {
    display: flex;
    flex: 1;
    flex-direction: column;
  }

  @include e(preview) {
    box-shadow: 0 0 0 1px getColor('black', a4);
    &::after {
      content: '';
      display: block;
      height: 100%;
      background-size: 50% 50%;
      background-image: var(--mask);
    }
    @include declareVars(
      (
        width: preview-size,
        height: preview-size,
        border-radius: preview-border-radius,
      )
    );
  }

  @include e(alpha) {
    &::part(rail)::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background-size: 8px 8px;
      background-image: var(--mask);
    }
  }

  @include is(panel-only) {
    @include declareVars(
      (
        padding: panel-only-padding,
        border-radius: panel-only-border-radius,
      )
    );
    @include declareVarValues(
      (
        border: (
          panel-only-border,
          1px solid getColor('black', a4),
        ),
      )
    );
  }

  @include size(1) {
    @include setVars(
      (
        panel-width: 200px,
        palette-height: 200px,
        thumb-size: getSpaceValue(2),
        palette-border-radius: getRadiusValue(1),
        preview-border-radius: getRadiusValue(1),
        preview-size: 20px,
        wrapper-gap: getSpaceValue(1),
        panel-gap: getSpaceValue(1),
        panel-only-padding: getSpaceValue(1),
        panel-only-border-radius: getRadiusValue(1),
      )
    );
  }

  @include size(2) {
    @include setVars(
      (
        panel-width: 234px,
        palette-height: 160px,
        thumb-size: calc(#{getSpaceValue(2)} * 1.5),
        palette-border-radius: getRadiusValue(1),
        preview-border-radius: getRadiusValue(1),
        preview-size: 30px,
        wrapper-gap: getSpaceValue(1),
        panel-gap: getSpaceValue(2),
        panel-only-padding: getSpaceValue(2),
        panel-only-border-radius: getRadiusValue(2),
      )
    );
  }

  @include size(3) {
    @include setVars(
      (
        panel-width: 200px,
        palette-height: 200px,
        thumb-size: calc(#{getSpaceValue(3)} * 1.5),
        palette-border-radius: getRadiusValue(1),
        preview-border-radius: getRadiusValue(1),
        preview-size: 40px,
        wrapper-gap: getSpaceValue(1),
        panel-gap: getSpaceValue(3),
        panel-only-padding: getSpaceValue(3),
        panel-only-border-radius: getRadiusValue(3),
      )
    );
  }
}
