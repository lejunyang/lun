@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

:host {
  display: inline-block;
  position: relative; // 会影响position+absolute时那个嵌套的宽度
}
[popover] {
  margin: initial;
  padding: initial;
  border: initial;
  outline: initial;
  background-color: initial;
}
[popover] {
  // important!! If don't set overflow unset, the arrow will not show. Maybe it's due to top layer popover, no idea why
  overflow: unset;
}

// :host {
//   position: relative; // 会影响position+absolute时那个嵌套的宽度
// }

@include b(popover) {
  $contentPadding: getVarName((popover, content, padding));
  $arrowSize: getVarName((popover, arrow, size));
  $arrowHypot: getVarName((popover, arrow, hypot));
  $arrowClipPath: getVarName((popover, arrow, clip-path));

  background-color: getSemanticColor('panel-solid');
  box-shadow: getShadow(5);
  box-sizing: border-box;

  // @include declareVars((transition));
  @include is(entered) {
    transition: all 0.2s cubic-bezier(0.23, 0.64, 0.34, 1);
    // do not use below way... found it will make nested popover transition abnormal... no idea why
    // @include setVars(
    //   (
    //     // transition: all 0.2s cubic-bezier(0.23, 0.64, 0.34, 1),
    //   )
    // );
  }

  @include e(arrow) {
    width: var(#{$arrowHypot});
    height: var(#{$arrowHypot});
    overflow: hidden;
    // use two pseudo elements to implement clip-path with shadows, ::before is the background, ::after is the shadow
    &::before {
      position: absolute;
      content: '';
      display: block;
      left: 0;
      width: var(#{$arrowHypot});
      height: var(#{$arrowHypot});
      background-color: getSemanticColor('panel-solid');
      clip-path: var(#{$arrowClipPath});
      z-index: 1;
    }
    &::after {
      position: absolute;
      content: '';
      display: block;
      left: 50%;
      top: 50%;
      width: var(#{$arrowSize});
      height: var(#{$arrowSize});
      transform: translate(-50%, -50%) rotate(45deg);
      box-shadow: getShadow(5);
    }
  }
  @include is(side-top) {
    #{$arrowClipPath}: polygon(50% 100%, 0% 0%, 100% 0%);
    @include e(arrow) {
      &::before {
        top: 0;
        height: calc(var(#{$arrowHypot}) / 2);
      }
      &::after {
        top: unset;
      }
    }
  }
  @include is(side-bottom) {
    #{$arrowClipPath}: polygon(50% 0%, 0% 100%, 100% 100%);
    @include e(arrow) {
      &::before {
        bottom: 0;
        height: calc(var(#{$arrowHypot}) / 2);
      }
      &::after {
        top: 100%;
      }
    }
  }
  @include is(side-left) {
    #{$arrowClipPath}: polygon(100% 50%, 0% 0%, 0% 100%);
    @include e(arrow) {
      &::before {
        left: 0;
        width: calc(var(#{$arrowHypot}) / 2);
      }
      &::after {
        left: unset;
      }
    }
  }
  @include is(side-right) {
    #{$arrowClipPath}: polygon(0% 50%, 100% 0%, 100% 100%);
    @include e(arrow) {
      &::before {
        left: unset;
        right: 0;
        width: calc(var(#{$arrowHypot}) / 2);
      }
      &::after {
        left: 100%;
      }
    }
  }

  @include size(1) {
    padding: var(#{$contentPadding}, getSpaceValue(1));
    border-radius: getRadiusValue(4);
    #{$arrowSize}: getSpaceValue(2);
    #{$arrowHypot}: getSpaceValue(2, true);
  }
  @include size(2) {
    padding: var(#{$contentPadding}, getSpaceValue(2));
    border-radius: getRadiusValue(4);
    #{$arrowSize}: getSpaceValue(3);
    #{$arrowHypot}: getSpaceValue(3, true);
  }
  @include size(3) {
    padding: var(#{$contentPadding}, getSpaceValue(4));
    border-radius: getRadiusValue(5);
    #{$arrowSize}: getSpaceValue(4);
    #{$arrowHypot}: getSpaceValue(4, true);
  }
  @include size(4) {
    padding: var(#{$contentPadding}, getSpaceValue(5));
    border-radius: getRadiusValue(5);
    #{$arrowSize}: getSpaceValue(5);
    #{$arrowHypot}: getSpaceValue(5, true);
  }

  // ------------------------------ for select ------------------------------
  @include is(select) {
    padding: 0;
    @include declareVars(
      (
        border-radius: content-border-radius,
      )
    );
  }
  // ------------------------------ for select ------------------------------
}
