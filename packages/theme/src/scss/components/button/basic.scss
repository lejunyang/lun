@use '../../mixins' as *;

:host(:not([block])) {
  display: inline-flex;
}

:host([block]) {
  display: flex;
  flex-grow: 1;
}

.hold-enter-from {
  width: 0;
}

.hold-enter-to {
  width: 100%;
}

.hold-leave-active {
  display: none;
}

.hold-enter-active {
  position: absolute;
  left: 0;
  height: 100%;
  transition-property: width;
  transition-timing-function: linear;
  transition-duration: getVarValue((button, hold));
  border-radius: var(--border-radius);
  @include declareVarValues(
    (
      background-color: (
        hold-background-color,
        getAccentColor(a7),
      ),
    )
  );
}

@include b(button) {
  // reset
  appearance: none;
  border: none;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  padding: 0;
  margin: 0;
  text-align: initial;
  -webkit-tap-highlight-color: transparent;

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  flex-grow: inherit;
  flex-shrink: 0;
  user-select: none;
  touch-action: manipulation;
  // vertical-align: top; // remove this to make ghost button with only icon as its child align normally
  cursor: pointer;
  @include declareVars(
    (height, border-radius, box-shadow, gap, font-size, line-height, letter-spacing, padding-inline)
  );
  @include declareVarValues(
    (
      background-color: transparent,
      'color': inherit,
      outline: none,
    )
  );

  @include is(disabled, true) {
    cursor: getDisabledCursor();
    & * {
      pointer-events: none;
    }
  }

  @include is(loading, true) {
    cursor: getLoadingCursor();
    @include declareVarValues(
      (
        opacity: (
          loading-opacity,
          0.7,
        ),
      )
    );
    & * {
      pointer-events: none;
    }
  }

  @include size(1) {
    @include setVars(
      (
        height: getSpaceValue(5),
        border-radius: getRadiusValue(1, 'full'),
        gap: getSpaceValue(1),
        font-size: getFontSizeValue(1),
        line-height: getLineHeightValue(1),
        letter-spacing: getLetterSpacingValue(1),
        padding-inline: getSpaceValue(2),
      )
    );
  }
  @include size(2) {
    @include setVars(
      (
        height: getSpaceValue(6),
        border-radius: getRadiusValue(2, 'full'),
        gap: getSpaceValue(1),
        font-size: getFontSizeValue(2),
        line-height: getLineHeightValue(2),
        letter-spacing: getLetterSpacingValue(2),
        padding-inline: getSpaceValue(3),
      )
    );
  }
  @include size(3) {
    @include setVars(
      (
        height: getSpaceValue(7),
        border-radius: getRadiusValue(3, 'full'),
        gap: getSpaceValue(3),
        font-size: getFontSizeValue(3),
        line-height: getLineHeightValue(3),
        letter-spacing: getLetterSpacingValue(3),
        padding-inline: getSpaceValue(4),
      )
    );
  }
  @include size(4) {
    @include setVars(
      (
        height: getSpaceValue(8),
        border-radius: getRadiusValue(4, 'full'),
        gap: getSpaceValue(3),
        font-size: getFontSizeValue(4),
        line-height: getLineHeightValue(4),
        letter-spacing: getLetterSpacingValue(4),
        padding-inline: getSpaceValue(5),
      )
    );
  }
}
