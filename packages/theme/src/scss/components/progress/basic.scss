@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

@keyframes rotate {
  0% {
    transform: translateX(-50%) rotate(0deg);
  }
  100% {
    transform: translateX(-50%) rotate(1turn);
  }
}

:host {
  flex: 1;
  display: inline-flex;
  align-items: center;
}

:host([type='line']) {
  display: flex;
}

@include b(progress) {
  @include declareVars((width, height));
  position: relative;

  @include e(text) {
    position: relative;
    z-index: 1;
  }

  @include m(wave) {
    border-radius: 50%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    @include declareVarValues((
      border: (
        wave-border,
        '1px solid ' + getGrayColor(9),
      ),
    ));
    @include size(1, false) {
      @include setVars(
        (
          width: 60px,
          height: 60px,
        )
      );
    }
    @include size(2, false) {
      @include setVars(
        (
          width: 120px,
          height: 120px,
        )
      );
    }
    @include size(3, false) {
      @include setVars(
        (
          width: 180px,
          height: 180px,
        )
      );
    }
  }

  @include e(wave) {
    width: calc(var(--width) * 2);
    height: calc(var(--height) * 2);
    background: getAccentColor(9);
    border-radius: calc(var(--width) * 3 / 4);
    position: absolute;
    left: 50%;
    top: calc(100% - getRVarValue(value) + getRVarValue(wave-offset, calc(10% * (1 - getRVarValue(num-value)))));
    // must set this in animation, animation will override this
    // transform: translateX(-50%);
    animation: rotate 5s linear infinite;
    @include declareVarValues(
      (
        transition: (
          wave-transition,
          'all 0.3s ease',
        ),
      )
    );
  }

  @include m(line) {
    background: getGrayColor(5);
    @include declareVars((border-radius));
    @include declareVarValues(
      (
        width: 100%,
      )
    );

    @include size(1, false) {
      @include setVars(
        (
          height: calc(#{getSpaceValue(2)} * 3 / 2),
          border-radius: getRadiusValue(1, false),
        )
      );
    }
    @include size(2, false) {
      @include setVars(
        (
          height: getSpaceValue(2),
          border-radius: getRadiusValue(2, false),
        )
      );
    }
    @include size(3, false) {
      @include setVars(
        (
          height: getSpaceValue(3),
          border-radius: getRadiusValue(3, false),
        )
      );
    }
  }
  @include e(line) {
    position: absolute;
    left: 0;
    width: getRVarValue(value);
    height: 100%;
    background: getAccentColor(9);
    @include declareVars((border-radius));
    @include declareVarValues(
      (
        transition: (
          line-transition,
          'width 0.3s ease',
        ),
      )
    );
  }
}
