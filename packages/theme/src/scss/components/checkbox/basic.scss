@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;
@use './basic.card.scss' as *;

:host {
  display: inline-flex;
  vertical-align: bottom;
  flex-shrink: 0;
}

@include b(checkbox) {
  display: inline-flex;
  align-items: center;
  @include declareVars((cursor, gap, line-height, font-size));
  @include setVars(
    (
      cursor: pointer,
    )
  );

  @include e(indicator) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    @include declareVars((border-radius));
    @include declareVars(
      (
        width: indicator-size,
        height: indicator-size,
        padding-inline: indicator-padding-inline,
      )
    );
    &:focus-visible {
      outline: 2px solid getFocusColor();
      outline-offset: 2px;
    }
  }

  @include is(readonly) {
    @include setVars(
      (
        cursor: unset,
      )
    );
  }

  @include is(disabled) {
    @include setVars(
      (
        cursor: getDisabledCursor(),
      )
    );
  }

  @include size(1) {
    @include setVars(
      (
        font-size: getFontSizeValue(1),
        line-height: getLineHeightValue(1),
        gap: calc(getSpaceValue(1) * 0.75),
        border-radius: calc(#{getRadiusValue(1)} / 1.25),
        indicator-size: calc(#{getSpaceValue(4)} * 0.875),
        indicator-padding-inline: calc(#{getSpaceValue(1)} * 0.75),
      )
    );
  }
  @include size(2) {
    @include setVars(
      (
        font-size: getFontSizeValue(2),
        line-height: getLineHeightValue(2),
        gap: getSpaceValue(1),
        border-radius: getRadiusValue(1),
        indicator-size: getSpaceValue(4),
        indicator-padding-inline: calc(#{getSpaceValue(1)} * 0.75),
      )
    );
  }
  @include size(3) {
    @include setVars(
      (
        font-size: getFontSizeValue(3),
        line-height: getLineHeightValue(3),
        gap: calc(getSpaceValue(2) * 0.75),
        border-radius: calc(#{getRadiusValue(1)} * 1.25),
        indicator-size: calc(#{getSpaceValue(4)} * 1.25),
        indicator-padding-inline: getSpaceValue(1),
      )
    );
  }
}
