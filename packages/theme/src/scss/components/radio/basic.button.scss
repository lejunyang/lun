@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

@include b(radio) {
  @include is(button) {
    @include declareVars(
      (
        padding-inline: button-padding-inline,
        line-height: button-line-height,
        height: button-height,
      )
    );
    border: 1px solid getGrayColor(a6);
    border-inline-end: none;
    @include e(indicator) {
      display: none;
    }
    @include hover {
      // background-color: getAccentColor(a4);
      color: getAccentColor(a11);
    }
  }
  @include is(start) {
    @include declareVars(
      (
        border-start-start-radius: button-border-radius,
        border-end-start-radius: button-border-radius,
      )
    );
  }
  @include is(end) {
    border-inline-end: 1px solid getGrayColor(a6);
    @include declareVars(
      (
        border-start-end-radius: button-border-radius,
        border-end-end-radius: button-border-radius,
      )
    );
  }
  @include is((button, disabled)) {
    color: getGrayColor(a8);
    background-color: getGrayColor(a3);
  }

  @include is((button, checked)) {
    background-color: getAccentColor(a5); // button soft
    border: 1px solid getAccentColor(7);
    position: relative; // set this to let the border of the checked one overlap the unchecked one, so that the border color won't be mixed
    &:not(#{getIs(end)}) {
      // to avoid two borders
      margin-inline-end: -1px;
    }
  }
}
