@use '../../mixins/bem' as *;
@use '../../mixins/theme' as *;
@use '../../mixins/function' as *;
@use '../../mixins/config' as *;

:host {
  display: contents;
}

@include b(dialog) {
  border: none;
  padding: 0;
  background-color: transparent;
  outline: none;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%; // override max-width: calc(100% - 6px - 2em); of user agent dialog:-internal-dialog-in-top-layer
  pointer-events: none;

  @include is(no-top-layer) {
    @include declareVars(z-index);
    @include setVars(
      (
        z-index: 1000,
      )
    );
    // copy from user agent dialog:-internal-dialog-in-top-layer and dialog
    position: fixed;
    // inset: 0px;
    margin: auto;
    // transform: translate(var(--lock-scroll-left), var(--lock-scroll-top));
    // do not use transform, transform will create a new stacking context and containing block, make nested dialog display unexpectedly
    left: var(--lock-scroll-left);
    top: var(--lock-scroll-top);
    @include e(mask) {
      left: var(--lock-scroll-left);
      top: var(--lock-scroll-top);
    }
  }

  &::backdrop {
    // backdrop doesn't inherit any css variables, no possible way to inherit parent theme var https://github.com/whatwg/fullscreen/issues/124
    // SPEC updated backdrop inheritance, but browsers haven't fixed them https://wpt.fyi/results/html/semantics/interactive-elements/the-dialog-element/backdrop-inherits.html?label=experimental&label=master&aligned
    // https://stackoverflow.com/questions/58818299/css-variables-not-working-in-dialogbackdrop
    // background-color: getSemanticColor('mask');
    background-color: transparent;
  }
  // so don't use backdrop, add another element as mask
  @include e(mask) {
    position: fixed;
    user-select: none; // prevent text selection(prevent the context menu triggered by text selection in edge)
    background-color: getSemanticColor('mask');
    transition: background-color 0.25s;
    inset: 0px;
    width: 100%;
    height: 100%;
    pointer-events: all;
  }

  @include e(panel) {
    position: absolute;
    z-index: 2;
    background-color: getSemanticColor('panel-solid');
    outline: none;
    box-sizing: border-box;
    pointer-events: all;
    // copy from user agent dialog:-internal-dialog-in-top-layer
    max-width: calc(100% - 6px - 2em);
    max-height: calc(100% - 6px - 2em);
    @include declareVars((border-radius));
  }
  @include is(no-mask) {
    @include e(panel) {
      box-shadow: getShadow(5); // requires the dialog has enough width and height, or the shadow will be clipped
    }
  }

  @include e(close) {
    position: absolute;
    transform: getRVarValue((close, transform), translate(50%, -50%));
    @include declareVars(
      (
        inset-block-start: close-inset-block-start,
        inset-inline-end: close-inset-inline-end,
      )
    );
  }

  @include e(header) {
    display: flex;
    align-items: center;
    margin-block-end: getSpaceValue(1);
    font-weight: getRVarValue((header, font-weight), getFontWeightValue(medium));
    @include declareVars(
      (
        font-size: header-font-size,
        line-height: header-line-height,
        padding: header-padding,
      )
    );
    @include is(draggable) {
      cursor: move;
    }
  }
  @include e(content) {
    @include declareVars(
      (
        font-size: content-font-size,
        line-height: content-line-height,
        padding: content-padding,
      )
    );
  }
  @include e(footer) {
    display: flex;
    justify-content: flex-end;
    @include declareVars(
      (
        gap: footer-gap,
        padding: footer-padding,
      )
    );
  }

  @include is(confirm) {
    @include e(content) {
      display: flex;
    }
    [data-status-icon='true'] {
      font-size: calc(var(--header-font-size) * 1.5);
      @include declareVars(
        (
          margin-inline-end: icon-margin-inline-end,
        )
      );
    }
  }

  $s3: getSpaceValue(3);
  $s4: getSpaceValue(4);
  $s5: getSpaceValue(5);
  @include size(1) {
    @include setVars(
      (
        header-padding: $s3 $s3 0 $s3,
        content-padding: 0 $s3,
        footer-padding: 0 $s3 $s3 $s3,
        border-radius: getRadiusValue(1),
        header-font-size: getFontSizeValue(2),
        header-line-height: getLineHeightValue(2),
        content-font-size: getFontSizeValue(1),
        content-line-height: getLineHeightValue(1),
        close-inset-block-start: calc(#{getSpaceValue(3)} + #{getLineHeightValue(2)} / 2),
        close-inset-inline-end: calc(#{getSpaceValue(3)} + #{getLineHeightValue(2)} / 2),
        icon-margin-inline-end: getSpaceValue(2),
        footer-gap: getSpaceValue(3),
      )
    );
  }
  @include size(2) {
    @include setVars(
      (
        header-padding: $s4 $s4 0 $s4,
        content-padding: 0 $s4,
        footer-padding: 0 $s4 $s4 $s4,
        border-radius: getRadiusValue(2),
        header-font-size: getFontSizeValue(3),
        header-line-height: getLineHeightValue(3),
        content-font-size: getFontSizeValue(2),
        content-line-height: getLineHeightValue(2),
        close-inset-block-start: calc(#{getSpaceValue(4)} + #{getLineHeightValue(3)} / 2),
        close-inset-inline-end: calc(#{getSpaceValue(4)} + #{getLineHeightValue(3)} / 2),
        icon-margin-inline-end: getSpaceValue(3),
        footer-gap: getSpaceValue(4),
      )
    );
  }
  @include size(3) {
    @include setVars(
      (
        header-padding: $s5 $s5 0 $s5,
        content-padding: 0 $s5,
        footer-padding: 0 $s5 $s5 $s5,
        border-radius: getRadiusValue(3),
        header-font-size: getFontSizeValue(4),
        header-line-height: getLineHeightValue(4),
        content-font-size: getFontSizeValue(3),
        content-line-height: getLineHeightValue(3),
        close-inset-block-start: calc(#{getSpaceValue(5)} + #{getLineHeightValue(4)} / 2),
        close-inset-inline-end: calc(#{getSpaceValue(5)} + #{getLineHeightValue(4)} / 2),
        icon-margin-inline-end: getSpaceValue(4),
        footer-gap: getSpaceValue(5),
      )
    );
  }
}
